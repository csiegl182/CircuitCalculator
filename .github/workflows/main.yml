name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  push:
    branches:
      # - main
      - test-pipeline

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -e .
  #       pip install pytest hypothesis
  #   - name: Test with pytest
  #     run: |
  #       pytest

  # build-and-publish:
  #   name: Build and publish
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install pypa/build
  #     run: >-
  #       python -m
  #       pip install
  #       build
  #       --user
  #   - name: Build a binary wheel and a source tarball
  #     run: >-
  #       python -m
  #       build
  #       --sdist
  #       --wheel
  #       --outdir dist/
  #       .
  #   - name: Publish distribution 📦 to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       password: ${{ secrets.PYPI_API_TOKEN_TEST }}
  #       repository-url: https://test.pypi.org/legacy/

  tag-version-number:
    name: Tag version
    runs-on: ubuntu-latest
    # needs: build-and-publish
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Get version number from pyproject.toml
      id: extract_version
      run: |
        pip install toml
        echo "version=$(python -c 'import toml; print(toml.load("pyproject.toml")["project"]["version"])')" >> $GITHUB_OUTPUT
    - name: Tag version
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        git tag "$VERSION"
        git push --tags
        echo "bla"

